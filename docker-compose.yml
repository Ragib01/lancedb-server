version: '3.8'

services:
  lancedb:
    build:
      context: .
      dockerfile: Dockerfile
    image: lancedb-server:latest
    container_name: lancedb-server
    restart: unless-stopped
    ports:
      - "${LANCEDB_PORT:-9000}:9000"
    environment:
      - LANCEDB_HOST=${LANCEDB_HOST:-0.0.0.0}
      - LANCEDB_PORT=9000
      - LANCEDB_DATA_DIR=/data
      - LANCEDB_LOG_LEVEL=${LANCEDB_LOG_LEVEL:-INFO}
      - LANCEDB_MAX_CONNECTIONS=${LANCEDB_MAX_CONNECTIONS:-100}
      - LANCEDB_AUTH_ENABLED=${LANCEDB_AUTH_ENABLED:-true}
      - LANCEDB_JWT_SECRET=${LANCEDB_JWT_SECRET}
      - LANCEDB_CORS_ORIGINS=${LANCEDB_CORS_ORIGINS:-*}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-lancedb}
      - POSTGRES_USER=${POSTGRES_USER:-lancedb}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - lancedb_data:/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - lancedb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: lancedb-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-9432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-lancedb}
      - POSTGRES_USER=${POSTGRES_USER:-lancedb}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - lancedb-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lancedb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: lancedb-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-9379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - lancedb-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: lancedb-nginx
    restart: unless-stopped
    ports:
      - "90:80"
      - "9443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - lancedb
    networks:
      - lancedb-network
    profiles:
      - production

  prometheus:
    image: prom/prometheus:latest
    container_name: lancedb-prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9091}:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - lancedb-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: lancedb-grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-9301}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - lancedb-network
    profiles:
      - monitoring

volumes:
  lancedb_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  lancedb-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 